#include "libn3d.hsp"
*init
	screen 0, 800, 800, SCREEN_HIDE
	screen 1, 640, 480
	n3d_initialize
	n3dm_initialize
	
	sdim testplane,65536
	bload "testplane.n3dm",testplane
	sdim laser,65536
	bload "laser.n3dm",laser
	sdim whitebox, 65536
	bload "whitebox.n3dm", whitebox
	
//	n3d_setCameraPosition -24.0, 0.0, -24.0
//	n3d_setCameraAngle 0.0, pi*0.35,0.0
	n3d_setCameraPosition -48.0, 0.0, -32.0
	n3d_setCameraAngle 0.0, pi*0.25,0.0
	
	x=0.0
	y=0.0
	
	ddim roll
	roll = 0.0
	ddim pitch
	pitch = 0.0
	ddim roll_targ
	roll_targ = 0.0
	ddim pitch_targ
	pitch_targ = 0.0
	
	
	dim bul_avail,64
	dim bul_x,64
	dim bul_y,64
	
	dim cammode
	cammode = 1
	dim camtime
	camtime = 0
	
	dim enem_avail
	enem_avail = 0
	
	ddim fa, 128
	ddim fx, 128
	ddim fy, 128
	ddim fz, 128
	ddim fxs, 128
	ddim fys, 128
	ddim fzs, 128
	ddim ft, 128
	ddim fp, 128
	ddim fts, 128
	ddim fps, 128
	ddim fs, 128
	dim flt, 128
	
	
	
*main
	repeat
		gsel 0
		redraw 0
		color 0,0,0
		boxf
		color 255,255,255
		n3d_deleteall
		
		gosub *proc_key
		gosub *proc_camera
		gosub *proc_axis
		gosub *proc_enemy
		gosub *proc_starship
		gosub *proc_bullet
		
		n3d_render
//		pos 0,0
//		gzoom 640, 480, 0, 0, 0, 320, 240, 0
		
		redraw 1
		
		gsel 1
		redraw 0
		gmode 0, 800, 800
		pos 320, 240
		grotate 0, 0, 0, deg2rad(roll / 4), 800, 800
		n3d_renderinfo
		redraw 1
		
		await 50
		if ky & 128{
			break
		}
	loop
end
stop

*proc_key
	stick ky,15+2048
	return

*proc_starship
	if ky&1{
		x-=3.2
		roll_targ = 30
		//xr=0.3
	}
	if ky&2{
		y-=1.6
		//yr=0.2
		pitch_targ = 20
	}
	if ky&4{
		x+=3.2
		//xr=-0.3
		roll_targ = -30
	}
	if ky&8{
		y+=1.6
		pitch_targ = -20
		//yr=-0.2
	}
	if (ky&1)/1 = (ky&4)/4{
		//xr=0.0
		roll_targ = 0.0
	}
	if (ky&2)/2 = (ky&8)/8{
		//yr=0.0
		pitch_targ = 0.0
	}
	
	if       abs(pitch_targ - pitch) <= 10{
		pitch = pitch_targ
	}else:if pitch_targ > pitch{
		pitch += 10
	}else{
		pitch -= 10
	}
	
	if       abs(roll_targ - roll) <= 5{
		roll = roll_targ
	}else:if roll_targ > roll{
		roll += 10
	}else{
		roll -= 10
	}
	
	if (ky&2048)=2048 & cnt\3=0{
		repeat 64
			if bul_avail(cnt)=0{
				bul_avail(cnt)=1
				bul_x(cnt)=x - 5.0 * cos(deg2rad(roll))
				bul_y(cnt)=y+15+rnd(4)
				break
			}
		loop
		repeat 64
			if bul_avail(cnt)=0{
				bul_avail(cnt)=1
				bul_x(cnt)=x + 5.0 * cos(deg2rad(roll))
				bul_y(cnt)=y+15+rnd(4)
				break
			}
		loop
	}
	n3dm_setModel testplane, 1, -y, -x, 0.0
	n3d_rotateXByGroup 1, -y, -x, 0.0,  double(roll) * 2 * PI / 360//xr
	n3d_rotateYByGroup 1, -y, -x, 0.0, double(pitch) * 2 * PI / 360//yr
	return


*proc_bullet
	n3d_deleteByGroup 2
	repeat 64
		if bul_avail(cnt)=1{
			bul_y(cnt)-=20
			n3dm_setModel laser, 100+cnt, -bul_y(cnt),-bul_x(cnt)-0.2, 0.0
			if bul_y(cnt)<-700{
				bul_avail(cnt)=0
			}
		}
	loop
	
	
	return

*proc_camera
	if cammode = 1{
		if camtime < 40{
			sectime = camtime
			n3d_setCameraPosition 116.0 - 2.5 * sectime, 0.0, 2.0
			//n3d_setCameraAngle pi, pi*0.5, 0.0
			n3d_setCameraAngleByLookingAt 0.0, 0.0, 0.0
		}
		if camtime >= 40 and camtime <= 40 + 60{
			enem_avail = 1
			enem_y = 768
			sectime = camtime - 40
			n3d_setCameraPosition 32.0 * cos(deg2rad(sectime * 3))- 16.0, 32.0 * sin(deg2rad(sectime * 3)) + 0.0, 2.0 - (sectime) * 18 / 60
			n3d_setCameraAngleByLookingAt 0.0, 0.0, 0.0
		}
	}
	camtime += 1
	
	n3d_setCameraAngleByLookingAt 0.0, 0.0, 0.0
	t = c_sightt@nastty3d
	t = t + deg2rad(double(pitch) / 10)
	c_sightt@nastty3d = t
	return

*proc_axis
	repeat 41
		lcnt = cnt - 20
		n3d_setpolygon 256, $888888, -36.0, 16.0 * lcnt, 0.0,  1024.0, 16.0 * lcnt, 0.0,  -36.0, 16.0 * lcnt, 0.0
	loop
	axistimer = (axistimer + 4) \ 16
	repeat 80
		lcnt = cnt - 4
		n3d_setpolygon 256, $888888, 16.0 * lcnt - axistimer, -128.0, 0.0,  16.0 * lcnt - axistimer, 128.0, 0.0,  16.0 * lcnt - axistimer, 128.0, 0.0
	loop
	return

*proc_enemy
	if enem_avail = 1{
		n3dm_setModel whitebox, 512, enem_y, 0, 0.0
		enem_y -= 4
	}
	if enem_avail = 1{
		repeat length(bul_avail)
			if bul_avail(cnt) = 1{
				if absf(bul_x(cnt) - 0) < 10.0 and absf(-bul_y(cnt) - enem_y) < 26.0{
					enem_avail = 0
					bul_avail(cnt) = 0
					repeat 16
						fx(cnt) = enem_y
						fy(cnt) = 0.0
						fy(cnt) = double(rnd(21) - 10)/2
						fz(cnt) = double(rnd(21) - 10)/2
						ft(cnt) = double(rnd(157)) / 100
						fp(cnt) = double(rnd(157)) / 100
						fa(cnt) = 1
						fs(cnt) = rnd(4) + 6
						fxs(cnt) = double(rnd(21) - 10)/10
						fys(cnt) = double(rnd(21) - 10)/10
						fzs(cnt) = double(rnd(21) - 10)/10
						fts(cnt) = double(rnd(11) - 5) / 100
						fps(cnt) = double(rnd(11) - 5) / 100
						flt(cnt) = 0
					loop
				}
			}
		loop
	}
	
	repeat length(fa)
		if fa(cnt) = 1{
			fx(cnt) += fxs(cnt)
			fy(cnt) += fys(cnt)
			fz(cnt) += fzs(cnt)
			ft(cnt) += fts(cnt)
			fp(cnt) += fps(cnt)
			
			fx(cnt) -= 4
			
			n3d_deleteByGroup 1024 + cnt
			
			n3d_setpolygon 1024 + cnt, $FFFFFF, fx(cnt), fy(cnt), fz(cnt),  fx(cnt) - fs(cnt), fy(cnt), fz(cnt),  fx(cnt), fy(cnt) - sqrt(fs(cnt) * 3 / 2), fz(cnt) - sqrt(fs(cnt) * 3 / 2)
			n3d_rotateXByGroup 1024 + cnt, fx(cnt), fy(cnt), fz(cnt),ft(cnt)
			n3d_rotateYByGroup 1024 + cnt, fx(cnt), fy(cnt), fz(cnt),fp(cnt)
			if flt(cnt) > 256{
				fa(cnt) = 0
			}
		}else{
		}
		
	loop//*/
	
	
	return